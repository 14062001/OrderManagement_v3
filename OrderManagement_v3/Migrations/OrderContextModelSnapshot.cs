// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderManagement_v3.Models;

namespace OrderManagement_v3.Migrations
{
    [DbContext(typeof(OrderContext))]
    partial class OrderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("OrderManagement_v3.Models.Customer", b =>
                {
                    b.Property<int>("Cust_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("City")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Mobileno")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<string>("RePassword")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Cust_id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("OrderManagement_v3.Models.Order", b =>
                {
                    b.Property<int>("Order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Delivery_Address")
                        .HasColumnType("varchar(70)");

                    b.Property<DateTime>("Order_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order_details")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Payment_method")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Shipment_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Total_Price")
                        .HasColumnType("int");

                    b.Property<int?>("customerCust_id")
                        .HasColumnType("int");

                    b.HasKey("Order_id");

                    b.HasIndex("customerCust_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("OrderManagement_v3.Models.OrderItems", b =>
                {
                    b.Property<int>("ReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("OrderStatus")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Order_id")
                        .HasColumnType("int");

                    b.Property<int?>("Product_id")
                        .HasColumnType("int");

                    b.HasKey("ReferenceId");

                    b.HasIndex("Order_id");

                    b.HasIndex("Product_id");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("OrderManagement_v3.Models.Product", b =>
                {
                    b.Property<int>("Product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ProductName")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("int");

                    b.Property<string>("Product_details")
                        .HasColumnType("varchar(70)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Product_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("OrderManagement_v3.Models.Order", b =>
                {
                    b.HasOne("OrderManagement_v3.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("customerCust_id");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("OrderManagement_v3.Models.OrderItems", b =>
                {
                    b.HasOne("OrderManagement_v3.Models.Order", "order")
                        .WithMany()
                        .HasForeignKey("Order_id");

                    b.HasOne("OrderManagement_v3.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("Product_id");

                    b.Navigation("order");

                    b.Navigation("product");
                });
#pragma warning restore 612, 618
        }
    }
}
